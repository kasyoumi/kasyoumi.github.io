<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Zonowry 的博客</title><link>https://blog.zonowry.com/</link><description>Recent content on Zonowry 的博客</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>zonowry</copyright><lastBuildDate>Fri, 16 Aug 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.zonowry.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Drafft: NAT 穿透在不同环境下的表现</title><link>https://blog.zonowry.com/posts/nat-in-different-environments/</link><pubDate>Fri, 16 Aug 2024 00:00:00 +0000</pubDate><guid>https://blog.zonowry.com/posts/nat-in-different-environments/</guid><description>前言 有时候会觉得 BT 以及可以实现 P2P 的 VPN 很”魔法“，因为一直对端到端直连的技术细节好像知道，又好像不知道。借着捣鼓了一阵 wireguard 组网，写下本文加深下对 P2P 理解。 配</description></item><item><title>关系型数据库如何检索数据</title><link>https://blog.zonowry.com/posts/how-to-retrieve-data-in-relational-database/</link><pubDate>Thu, 18 Apr 2024 00:00:00 +0000</pubDate><guid>https://blog.zonowry.com/posts/how-to-retrieve-data-in-relational-database/</guid><description>说实话研究数据库的底层对常见的项目帮助不大，或者说不受重视，更多是在业务编排上。数据库随便建建，增删改查随便写写，功能就完成了，项目就上线了。但程序员</description></item><item><title>在 PVE 容器上部署 k3s + rancher</title><link>https://blog.zonowry.com/posts/deploy-k3s-+-rancher-on-pve-container/</link><pubDate>Mon, 15 Apr 2024 00:00:00 +0000</pubDate><guid>https://blog.zonowry.com/posts/deploy-k3s-+-rancher-on-pve-container/</guid><description>折腾历程 目的本来是实操 k8s 的，部署时搞了一堆花里胡哨的，虽然因为复杂度与资源消耗原因放弃了这套方案~~（=白折腾）~~，但对理解 k8s 的组成部分帮助很大。 曾</description></item><item><title>红米 AX6S 路由器刷入纯净最新 ImmortalWrt 步骤</title><link>https://blog.zonowry.com/posts/steps-to-flash-redmi-ax6s-router-with-openwrt/</link><pubDate>Sun, 31 Mar 2024 00:00:00 +0000</pubDate><guid>https://blog.zonowry.com/posts/steps-to-flash-redmi-ax6s-router-with-openwrt/</guid><description>启用路由器的 telnet 为了启用 telnet，需要手动升级路由器固件到开发版，开发版固件可以在 GitHub - YangWang92/AX6S-unlock 仓库下载。(miwifi_rb03_firmware_sta</description></item><item><title>怎样安全的并发编程</title><link>https://blog.zonowry.com/posts/how-to-do-safe-concurrent-programming/</link><pubDate>Thu, 29 Feb 2024 00:00:00 +0000</pubDate><guid>https://blog.zonowry.com/posts/how-to-do-safe-concurrent-programming/</guid><description>引言 说到并发，首先会想到多线程。若只关注多线程如何使用，却对并发编程没有深入的了解，很容易在代码里挖坑，变成这个段子的模样：“从前有个程序员遇到了一个</description></item><item><title/><link>https://blog.zonowry.com/thinks/01/</link><pubDate>Sat, 24 Feb 2024 00:00:00 +0000</pubDate><guid>https://blog.zonowry.com/thinks/01/</guid><description>hyprland 的社区搞耍的人好多哈哈。 起因：hyprland 移除了二次元 waifu 壁纸 https://github.com/hyprwm/Hyprland/pull/4089 https://www.reddit.com/r/hyprland/comments/1am6434/what_the_fuck_is_this_where_are_the_waifus_i_want/ https://github.com/hyprwm/Hyprland/issues/4706</description></item><item><title/><link>https://blog.zonowry.com/thinks/02/</link><pubDate>Fri, 23 Feb 2024 00:00:00 +0000</pubDate><guid>https://blog.zonowry.com/thinks/02/</guid><description>意外看到一句老外的名言。 To see things in the seed, that is genius —— LaoZi 然后发现应该是个乌龙翻译：https://huaren.us/showtopic.html?topic</description></item><item><title/><link>https://blog.zonowry.com/thinks/023/</link><pubDate>Wed, 21 Feb 2024 00:00:00 +0000</pubDate><guid>https://blog.zonowry.com/thinks/023/</guid><description>测试一下。。。</description></item><item><title>Arch + Hyprland 安装手册</title><link>https://blog.zonowry.com/posts/install-hyprland-on-arch-and-simple-beautify/</link><pubDate>Fri, 16 Feb 2024 00:00:00 +0000</pubDate><guid>https://blog.zonowry.com/posts/install-hyprland-on-arch-and-simple-beautify/</guid><description>首先展示成果 首先安装 Arch 进入 live 。 硬盘分区 先使用 fdisk 对磁盘分区，至少需要创建一个 fat 格式分区，存放 efi 引导文件。和 ext4 主分区，存放系统文件。以及一个交换分区（可选</description></item><item><title>如何写一手容易维护的代码</title><link>https://blog.zonowry.com/posts/how-to-write-code-that-is-easy-to-maintain/</link><pubDate>Thu, 18 Jan 2024 00:00:00 +0000</pubDate><guid>https://blog.zonowry.com/posts/how-to-write-code-that-is-easy-to-maintain/</guid><description>免责声明 程序员对抽象、设计可能会有不同的习惯。同样一个功能有人用发布订阅，有人用消息队列，他们都有自己的一套设计理念。最终是谁能说服谁的问题，哪一种方</description></item><item><title>iptables + clash 透明网关实践与总结</title><link>https://blog.zonowry.com/posts/build-a-proxy-gateway-based-on-iptables-and-clash/</link><pubDate>Wed, 01 Mar 2023 00:00:00 +0000</pubDate><guid>https://blog.zonowry.com/posts/build-a-proxy-gateway-based-on-iptables-and-clash/</guid><description>前言 尝试用 clash tun 模式来实现过网关，虽然过程很流畅也比较“新潮“，但对于我来说有点魔法了，因为比较难搞清楚 clash 帮我们做了哪些工作，出现问题不好找原因。也可能</description></item></channel></rss>